import java.awt.EventQueue;
import java.awt.Toolkit;

import javax.swing.JFrame;
import java.awt.Dimension;
import javax.swing.JToolBar;
import java.awt.BorderLayout;
import java.awt.event.ActionEvent;
import java.io.IOException;

import javax.swing.AbstractAction;
import javax.swing.JButton;
import javax.swing.JMenu;
import javax.swing.JMenuItem;
import javax.swing.SpringLayout;
import javax.swing.JPanel;
import javax.swing.JMenuBar;
import javax.swing.JSplitPane;
import javax.swing.JTextPane;

import org.jdesktop.swingx.MultiSplitLayout;
import org.jdesktop.swingx.MultiSplitPane;


public class MainWindow {

	private JFrame frame;
	
	
	/*
	 * Menu bar members
	 */
	private JMenuBar menuBar;
	private JMenu fileMenu;
	private JMenuItem openConnection;
	private JMenuItem testVideoWithFiles;
	private JMenu viewMenu;
	
	private VideoPanel videoPanel;
	private ConsolePanel consolePanel;

	/**
	 * Launch the application.
	 */
	public static void main(String[] args) {		
		EventQueue.invokeLater(new Runnable() {
			public void run() {
				MainWindow window = null;
				try {
					window = new MainWindow();
					window.frame.setVisible(true);
				} catch (Exception e) {
					e.printStackTrace();
				}
			}
		});
		
		
	}

	/**
	 * Create the application.
	 */
	public MainWindow() {
		initialize();
	}

	/**
	 * Initialize the contents of the frame.
	 */
	private void initialize() {
		Toolkit.getDefaultToolkit().setDynamicLayout(true);
		frame = new JFrame();
		frame.setLayout(new BorderLayout());
		frame.setMinimumSize(new Dimension(800, 600));
		frame.setBounds(100, 100, 845, 592);
		frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		
		MultiSplitPane multiSplitPane = new MultiSplitPane();
		
		//String layoutDef =
		//    "(COLUMN (ROW weight=1.0 left (COLUMN middle.top middle middle.bottom) right) bottom)";
		
		String layoutDef =
			"(COLUMN (ROW weight=0.2 (LEAF name=topleft weight=0.5) (LEAF name=topright weight=0.5)) (ROW weight=0.2 (LEAF name=bottomleft weight=0.5) (LEAF name=bottomright weight=0.5))  (LEAF name=consolearea))";
		
		MultiSplitLayout.Node modelRoot = MultiSplitLayout.parseModel(layoutDef);
		
		multiSplitPane.getMultiSplitLayout().setModel(modelRoot);
		
		videoPanel = new VideoPanel();
		multiSplitPane.add(videoPanel, "topleft");
		
		multiSplitPane.add(new UIPanel(), "topright");
		multiSplitPane.add(new UIPanel(), "bottomleft");
		multiSplitPane.add(new UIPanel(), "bottomright");
		
		consolePanel = new ConsolePanel();
		multiSplitPane.add(consolePanel, "consolearea");

		
		frame.getContentPane().add(multiSplitPane, BorderLayout.CENTER);
		
		
		
		menuBar = new JMenuBar();
		fileMenu = new JMenu("File");
		viewMenu = new JMenu("View");
		menuBar.add(fileMenu);
		menuBar.add(viewMenu);
		
		openConnection = new JMenuItem("Open Connection");
		testVideoWithFiles = new JMenuItem("Test Video");
		testVideoWithFiles.setAction(new StartVideo(videoPanel));
		fileMenu.add(testVideoWithFiles);
		fileMenu.add(openConnection);
		
		frame.getContentPane().add(menuBar, BorderLayout.NORTH);
	}
	
	public class StartVideo extends AbstractAction {
		VideoPanel vp;
		
		public StartVideo(VideoPanel videoPanel, VideoStreamer videoStreamer) {
			this.vp = vp;
		}
		
		public void actionPerformed(ActionEvent e) {
			
		}
	}
}
